# This workflow triggers when code is merged to main branch
# It runs tests and then either automatically publishes to npm or asks for approval first

name: Publish to npm on merge

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      auto_publish:
        description: 'Automatically publish without approval'
        required: true
        default: false
        type: boolean

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm test
      - run: npm run build:full
      
  security-checks:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      security-events: write  # Required for CodeQL
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run npm audit
        run: npm audit --production
      # CodeQL Analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      - name: Check for vulnerable dependencies
        uses: snyk/actions/node@master
        continue-on-error: true # Don't fail the build, but report issues
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  check-version-bump:
    needs: [build-and-test, security-checks]
    runs-on: ubuntu-latest
    outputs:
      has_version_changed: ${{ steps.version_check.outputs.has_changed }}
      current_version: ${{ steps.version_check.outputs.current_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for comparing versions
      
      - id: version_check
        name: Check if version has changed
        run: |
          # Get current package.json version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Get the package.json from the previous commit on main
          git checkout HEAD~1 -- package.json
          PREVIOUS_VERSION=$(node -p "require('./package.json').version")
          git checkout HEAD -- package.json
          
          # Compare versions
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed: $PREVIOUS_VERSION -> $CURRENT_VERSION"
            echo "has_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged: $CURRENT_VERSION"
            echo "has_changed=false" >> $GITHUB_OUTPUT
          fi

  publish-options:
    needs: check-version-bump
    if: needs.check-version-bump.outputs.has_version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set deployment options
        run: echo "Version change detected. Publishing options available."
      - name: Auto publishing
        if: github.event.inputs.auto_publish == 'true'
        run: echo "Auto-publishing enabled. Package will be published automatically."
      - name: Manual approval
        if: github.event.inputs.auto_publish != 'true'
        run: echo "Package is ready for publishing. You can approve the deployment in the next step."

  publish-with-approval:
    needs: publish-options
    if: github.event.inputs.auto_publish != 'true'
    runs-on: ubuntu-latest
    environment: npm-publish
    steps:
      - name: Approval notification
        run: echo "Publishing approved for version ${{ needs.check-version-bump.outputs.current_version }}"

  publish-npm:
    needs: [check-version-bump, publish-options]
    if: |
      always() && 
      needs.check-version-bump.outputs.has_version_changed == 'true' && 
      (github.event.inputs.auto_publish == 'true' || success())
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.auto_publish == 'true' && '' || 'npm-publish' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - name: Package published
        run: echo "üéâ Package version ${{ needs.check-version-bump.outputs.current_version }} published to npm!"

  no-version-change:
    needs: check-version-bump
    if: needs.check-version-bump.outputs.has_version_changed == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: No version change detected
        run: echo "‚ö†Ô∏è No version change was detected in package.json. If you still want to publish, you need to update the version number first."
      - name: Manual publish option
        run: |
          echo "To manually publish without changing the version:"
          echo "1. Go to Actions tab"
          echo "2. Select this workflow"
          echo "3. Click 'Run workflow'"
          echo "4. Enable 'Automatically publish without approval'"
          echo "5. Click 'Run workflow'"